grammar Acm;

// --- Parser grammar ---
filter: NOT? query (booleanOperator query)* | EOF;

query: fieldName COLON value (orOperator value)*;

orOperator: OR NOT?;
booleanOperator: (AND | OR) NOT?;

fieldName: STRING;
value: STRING;
comment: SINGLE_LINE_COMMENT;
// --- Lexer ---

// Comments
SINGLE_LINE_COMMENT: '//' ~[\r\n]* -> skip;

// Boolean expression tokens
OR: 'or' | 'OR';
AND: 'and' | 'AND';
NOT: 'not' | 'NOT';
COLON: ':';
STRING: '"' (~["] | '\\"')* '"';

// Tell our parser to skip whitespace
WS: [ \t\r\n]+ -> skip;